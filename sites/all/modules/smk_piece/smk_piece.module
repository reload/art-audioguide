<?php
/**
 * @file
 * Code for the smk_piece feature.
 */

include_once 'smk_piece.features.inc';

/**
 * Implements hook_form_alter().
 */
function smk_piece_form_alter(&$form, &$form_state, $form_id) {
  switch ($form_id) {
    case 'piece_node_form':
      $form['#validate'][] = 'smk_piece_unique_id_validation';
      break;
  }
}

/**
 * Unique inventory ID validation.
 */
function smk_piece_unique_id_validation(&$form, &$form_state) {
  // Get the requested inventory/piece id.
  $id = $form_state['values']['field_piece_id'][LANGUAGE_NONE][0]['value'];

  // Look for pieces with the "wished ID" and exclude
  // the current nid from the query.
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'piece')
    ->fieldCondition('field_piece_id', 'value', $id, '=');

  // If we're editing a node, we want to exclude the current nodes title.
  if (isset($form_state['node']->nid)) {
    $query->propertyCondition('nid', $form_state['node']->nid, '!=');
  }

  // Execute query.
  $result = $query->execute();

  // Return an error if the query found a match.
  if (isset($result['node']) && count($result['node']) != 0) {
    form_set_error('piece_id', t('The inventory ID "!id" is already in use.', array('!id' => $id)));
  }
}
