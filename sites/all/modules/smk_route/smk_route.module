<?php
/**
 * @file
 * Code for the  feature.
 */

include_once 'smk_route.features.inc';

/**
 * Implements hook_ds_fields_info().
 */
function smk_route_ds_fields_info($entity_type) {
  $fields = array();

  if ($entity_type == 'node') {
    // Amount of referenced sounds.
    $fields['node']['amount_of_sounds'] = array(
      'title' => t('Amount of sounds'),
       'field_type' => DS_FIELD_TYPE_FUNCTION,
      'function' => '_smk_route_amount_of_sounds',
      'ui_limit' => array('route|*'),
    );
    // The combined duration of a routes sounds.
    $fields['node']['sounds_duration'] = array(
      'title' => t('The combined duration of the sounds.'),
      'field_type' => DS_FIELD_TYPE_FUNCTION,
      'function' => '_smk_route_sounds_duration',
      'ui_limit' => array('route|*'),
    );
  }

  if (isset($fields[$entity_type])) {
    return array($entity_type => $fields[$entity_type]);
  }

  return;
}

/**
 * Returns the amount of sounds a route references.
 */
function _smk_route_amount_of_sounds($field) {
  $sounds = field_get_items('node', $field['entity'], 'field_audio_ref');
  $count = empty($sounds) ? 0 : count($sounds);
  return format_plural($count, t('!result sound'), t('!result sounds'), array('!result' => $count));
}

/**
 * Returns the combined time of the associated sounds (For Routes).
 */
function _smk_route_sounds_duration($field) {
  $sounds = field_get_items('node', $field['entity'], 'field_audio_ref');
  // Define sum variable.
  $seconds = 0;
  if (!empty($sounds)) {
    foreach ($sounds as $sound) {
      $wrapper = entity_metadata_wrapper('node', $sound['target_id']);
      $file = $wrapper->field_audio_file->value();
      if (!empty($file)) {
        $fileWrapper = entity_metadata_wrapper('file', $file['fid']);
        // Get the duration field from the file and add it to "sum".
        $seconds += $fileWrapper->field_duration->value();
      }
    }
  }

  // Check if the combined duration includes "hours".
  if (gmdate('H', $seconds) == '00') {
    return t('Combined time: !time', array('!time' => gmdate('i:s', $seconds)));
  } else {
    return t('Combined time: !time', array('!time' => gmdate('H:i:s', $seconds)));
  }
}
